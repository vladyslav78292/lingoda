{"version":3,"sources":["scripts/main.js"],"names":["slider","document","querySelector","trail","querySelectorAll","value","trailValue","interval","slide","condition","clearInterval","start","initiateINC","initiateDEC","move","animate","setInterval","forEach","cur","classList","remove","trailUpdate","S","T","style","transform","add","tl","gsap","timeline","defaults","duration","ease","from","x","opacity","y","restart","addEventListener","contains","clickCheck","e","check","target","ev","touchSlide","change","sliderWidth","touches","clientX","clientWidth","length","preventDefault","feedback","feedback_offset","feedbackUpdateHeight","height","offsetHeight","feedback_slider","Swiper","direction","slidesPerView","autoHeight","centeredSlides","spaceBetween","grabCursor","loop","navigation","nextEl","prevEl","on","setTimeout","slides","activeIndex","scrollpos","window","scrollY","header","header_height","add_class_on_scroll","remove_class_on_scroll","cookie_button","cookie_popup","getElementById","element"],"mappings":"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","file":"main.43ec0f1d.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nconst slider = document.querySelector(\".slider\")\r\nconst trail = document.querySelector(\".trail\").querySelectorAll(\"div\")\r\n\r\nlet value = 0\r\nlet trailValue = 0\r\nlet interval = 4002220\r\n\r\nconst slide = (condition) => {\r\n    clearInterval(start)\r\n    condition === \"increase\" ? initiateINC() : initiateDEC()\r\n    move(value, trailValue)\r\n    animate()\r\n    start = setInterval(() => slide(\"increase\"), interval);\r\n}\r\n\r\nconst initiateINC = () => {\r\n    trail.forEach(cur => cur.classList.remove(\"active\"))\r\n    value === 80 ? value = 0 : value += 20\r\n    trailUpdate()\r\n}\r\n\r\nconst initiateDEC = () => {\r\n    trail.forEach(cur => cur.classList.remove(\"active\"))\r\n    value === 0 ? value = 80 : value -= 20\r\n    trailUpdate()\r\n}\r\n\r\nconst move = (S, T) => {\r\n    slider.style.transform = `translateX(-${S}%)`\r\n    trail[T].classList.add(\"active\")\r\n}\r\n\r\nconst tl = gsap.timeline({defaults: {duration: 0.6, ease: \"power2.inOut\"}})\r\ntl.from(\".bg\", {x: \"-100%\", opacity: 0})\r\n  .from(\".details\", {opacity: 0}, \"-=0.3\")\r\n  .from(\"button\", {opacity: 0, y: \"-40px\"}, \"-=0.8\")\r\n\r\nconst animate = () => tl.restart()\r\n\r\nconst trailUpdate = () => {\r\n    if (value === 0) {\r\n        trailValue = 0\r\n    } else if (value === 20) {\r\n        trailValue = 1\r\n    } else if (value === 40) {\r\n        trailValue = 2\r\n    } else if (value === 60) {\r\n        trailValue = 3\r\n    } else {\r\n        trailValue = 4\r\n    }\r\n}   \r\n\r\nlet start = setInterval(() => slide(\"increase\"), interval)\r\n\r\ndocument.querySelectorAll(\"svg\").forEach(cur => {\r\n    cur.addEventListener(\"click\", () => cur.classList.contains(\"next\") ? slide(\"increase\") : slide(\"decrease\"))\r\n})\r\n\r\nconst clickCheck = (e) => {\r\n    clearInterval(start)\r\n    trail.forEach(cur => cur.classList.remove(\"active\"))\r\n    const check = e.target\r\n    check.classList.add(\"active\")\r\n\r\n    if(check.classList.contains(\"box1\")) {\r\n        value = 0\r\n    } else if (check.classList.contains(\"box2\")) {\r\n        value = 20\r\n    } else if (check.classList.contains(\"box3\")) {\r\n        value = 40\r\n    } else if (check.classList.contains(\"box4\")) {\r\n        value = 60\r\n    } else {\r\n        value = 80\r\n    }\r\n    trailUpdate()\r\n    move(value, trailValue)\r\n    animate()\r\n    start = setInterval(() => slide(\"increase\"), interval)\r\n}\r\n\r\ntrail.forEach(cur => cur.addEventListener(\"click\", (ev) => clickCheck(ev)))\r\n\r\nconst touchSlide = (() => {\r\n    let start, move, change, sliderWidth\r\n\r\n    slider.addEventListener(\"touchstart\", (e) => {\r\n        start = e.touches[0].clientX\r\n        sliderWidth = slider.clientWidth/trail.length\r\n    })\r\n    \r\n    slider.addEventListener(\"touchmove\", (e) => {\r\n        e.preventDefault()\r\n        move = e.touches[0].clientX\r\n        change = start - move\r\n    })\r\n\r\n    const mobile = (e) => {\r\n        change > (sliderWidth/4)  ? slide(\"increase\") : null;\r\n        (change * -1) > (sliderWidth/4) ? slide(\"decrease\") : null;\r\n        [start, move, change, sliderWidth] = [0,0,0,0]\r\n    }\r\n    slider.addEventListener(\"touchend\", mobile)\r\n})()\r\n\r\nconst feedback = document.querySelector('.feedback__slider');\r\nconst feedback_offset = 300;\r\n\r\nfunction feedbackUpdateHeight(height) {\r\n  if (!height) return false;\r\n  feedback.style.height = `${height + feedback_offset}px`;\r\n}\r\n\r\nif (feedback) {\r\n  feedbackUpdateHeight(feedback.querySelector('.feedback__item').offsetHeight);\r\n\r\n  const feedback_slider = new Swiper(feedback, {\r\n    direction: 'vertical',\r\n    slidesPerView: 'auto',\r\n    autoHeight: true,\r\n    centeredSlides: true,\r\n    spaceBetween: 30,\r\n    grabCursor: true,\r\n    loop: true,\r\n    navigation: {\r\n      nextEl: '.swiper-button-next',\r\n      prevEl: '.swiper-button-prev',\r\n    },\r\n  });\r\n\r\n  feedback_slider.on('slideChange', () => {\r\n    setTimeout(() => {\r\n      feedbackUpdateHeight(feedback_slider.slides[feedback_slider.activeIndex].offsetHeight);\r\n    }, 300);\r\n  });\r\n}\r\n\r\nlet scrollpos = window.scrollY\r\nconst header = document.querySelector(\"header\")\r\nconst header_height = header.offsetHeight\r\n\r\n\r\nconst add_class_on_scroll = () => header.classList.add(\"header__background\");\r\nconst remove_class_on_scroll = () => header.classList.remove(\"header__background\");\r\n\r\n\r\nwindow.addEventListener('scroll', function() { \r\n  scrollpos = window.scrollY\r\n\r\n  if (scrollpos >= header_height) { add_class_on_scroll() }\r\n  else { remove_class_on_scroll() }\r\n\r\n})\r\n\r\nconst cookie_button = document.querySelectorAll('.cookie-popup__button');\r\nconst cookie_popup = document.getElementById('cookie-popup');\r\n\r\ncookie_button.forEach((element) => {\r\n  element.addEventListener('click', () => {\r\n    cookie_popup.style = \"bottom: -220px\";\r\n  })\r\n})\r\n\r\nsetTimeout(() => {\r\n  document.querySelector('#cookie-popup').style = 'bottom: 30px; opacity: 1;';\r\n}, 1000);\r\n"]}